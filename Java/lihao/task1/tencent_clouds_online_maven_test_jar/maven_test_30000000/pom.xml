<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lihoo</groupId>
    <artifactId>maven_test_4</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <mybatis.version>3.5.6</mybatis.version>
        <mysql-driver.version>5.1.46</mysql-driver.version>
        <log4j2.version>2.11.0</log4j2.version>
        <c3p0.version>0.9.5.2</c3p0.version>
    </properties>


    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <!--<scope>test</scope>-->
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
        </dependency>
        <!-- 添加mysql驱动依赖 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql-driver.version}</version>
        </dependency>

         <!--添加日志相关jar包-->
         <!--桥接：告诉Slf4j使用Log4j2-->
        <!--<dependency>-->
            <!--<groupId>org.apache.logging.log4j</groupId>-->
            <!--<artifactId>log4j-slf4j-impl</artifactId>-->
            <!--<version>${log4j2.version}</version>-->
        <!--</dependency>-->
        <!-- 桥接：告诉commons logging使用Log4j2 -->
        <!--<dependency>-->
            <!--<groupId>org.apache.logging.log4j</groupId>-->
            <!--<artifactId>log4j-jcl</artifactId>-->
            <!--<version>2.11.0</version>-->
        <!--</dependency>-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>

        <!--添加c3p0连接池-->
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>${c3p0.version}</version>
        </dependency>
    </dependencies>



    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <!--这里填写拥有主函数main的类的全限定名-->
                                    <mainClass>com.lihoo.demo.App</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--将工程打成jar包(不包含第三方依赖包)-->
            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-jar-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<archive>-->
                        <!--<manifest>-->
                            <!--&lt;!&ndash; 不记录版本号 &ndash;&gt;-->
                            <!--<addclasspath>true</addclasspath>-->
                            <!--<classpathprefix>lib/</classpathprefix>-->
                            <!--&lt;!&ndash;指定入口类，在GetMe类中有main方法&ndash;&gt;-->
                            <!--<mainclass>com.lihoo.demo.App</mainclass>-->
                        <!--</manifest>-->
                        <!--&lt;!&ndash;可省，但是建议加上&ndash;&gt;-->
                        <!--<manifestentries>-->
                            <!--<class-paht>.</class-paht>-->
                        <!--</manifestentries>-->
                    <!--</archive>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>

                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!--文件生成路径  project.build.directory可以直接使用-->
                            <outputdirectory>
                                ${project.build.directory}/lib
                            </outputdirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>
</project>