### 设置###
#此句为将等级为debug的日志信息输出到stdout和D、E这两个目的地，stdout和D、E的定义在下面的代码，
# 可以任意起名。等级可分为OFF、FATAL、ERROR、WARN、INFO、DEBUG、ALL，
# 如果配置OFF则不打出任何信息，如果配置为INFO这样只显示INFO、WARN、ERROR的log信息，而DEBUG信息不会被显示
log4j.rootLogger=debug,stdout,D,E

### 输出信息到控制抬 ###
#此句为定义名为stdout的输出端是哪种类型
#org.apache.log4j.ConsoleAppender（控制台）
#org.apache.log4j.FileAppender（文件）
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#设置输出的目标是控制台
log4j.appender.stdout.Target=System.out
#此句为定义名为stdout的输出端的layout是哪种类型
#org.apache.log4j.HTMLLayout（以HTML表格形式布局），
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
###设置输出格式
#%m 输出代码中指定的消息；
#%M 输出打印该条日志的方法名；
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL；
#%r 输出自应用启动到输出该log信息耗费的毫秒数；
#%c 输出所属的类目，通常就是所在类的全名；
#%t 输出产生该日志事件的线程名；
#%n 输出一个回车换行符，Windows平台为"rn”，Unix平台为"n”；
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式
# 比如：%d{yyyy-MM-dd HH:mm:ss,SSS}，输出类似：2002-10-18 22:10:28,921；
# 默认ISO8601-国际标准化组织的日期时间表示方式
#%l 输出日志事件的发生位置，及在代码中的行数；
log4j.appender.stdout.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

### 输出DEBUG 级别以上的日志到=E://logs/error.log ###
#设置每天产生一个日志文件
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
#此句为定义名为D的输出端的文件名为E://logs/log.log可以自行修改
log4j.appender.D.File=E://logs/log.log
#？
log4j.appender.D.Append=true
#只输出DEBUG以上级别的日志
log4j.appender.D.Threshold=DEBUG 
#输出的布局是可以灵活地指定布局模式
log4j.appender.D.layout=org.apache.log4j.PatternLayout
#设置输出的格式
log4j.appender.D.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 输出ERROR 级别以上的日志到=E://logs/error.log ###
log4j.appender.E=org.apache.log4j.DailyRollingFileAppender
#设置输出到E://logs/error.log
log4j.appender.E.File=E://logs/error.log 
#？
log4j.appender.E.Append=true
#设置只输出ERROR级别以上的日志
log4j.appender.E.Threshold=ERROR 
log4j.appender.E.layout=org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
