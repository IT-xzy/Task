<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:sca="http://www.springframework.org/schema/sca"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/sca
       http://www.osoa.org/xmlns/sca/1.0/spring-sca.xsd">

    <!--开启注解-->
    <context:annotation-config/>

    <!--aop作用于controller-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--基于注解实现aop-->
    <context:component-scan base-package="com.jnshu.tool.aop"/>

    <!--扫描下所有使用注解的类型-->
    <context:component-scan base-package="com.jnshu.tool"/>

    <!--扫描service包下所有使用注解的类型-->
    <context:component-scan base-package="com.jnshu.service"/>

    <!--&lt;!&ndash;配置数据库相关参数properties的属性：${url}&ndash;&gt;-->
    <!--<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>-->

    <!--数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/task4"/>
        <property name="user" value="root"/>
        <property name="password" value="123456"/>
        <property name="maxPoolSize" value="300"/>
        <property name="minPoolSize" value="10"/>
        <property name="autoCommitOnClose" value="false"/>
        <property name="checkoutTimeout" value="10000"/>
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!--配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--扫描pojo包 使用别名-->
        <property name="typeAliasesPackage" value="com.jnshu.pojo"/>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 扫描接口文件-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开-->
        <property name="basePackage" value="com.jnshu.dao"/>
    </bean>

    <!--配置事务管理 对mybatis操作数据库事物控制，spring使用jdbc的事物控制类-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <sca:service name="JobService1" type="com.jnshu.service.JobService" target="jobServiceImpl"/>
    <bean id="jobServiceImpl" class="com.jnshu.service.JobServiceImp"/>

    <sca:service name="StudentService1" type="com.jnshu.service.StudentService" target="studentServiceImpl"/>
    <bean id="studentServiceImpl" class="com.jnshu.service.StudentServiceImp"/>

    <sca:service name="UserService1" type="com.jnshu.service.UserService" target="userServiceImpl"/>
    <bean id="userServiceImpl" class="com.jnshu.service.UserServiceImp"/>


    <import resource="classpath*:/spring-redis.xml" />

</beans>