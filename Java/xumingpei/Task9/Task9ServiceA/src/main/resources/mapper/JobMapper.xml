<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jnshu.dao.JobMapper" >
    <resultMap id="BaseResultMap" type="com.jnshu.pojo.Job" >
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="img" jdbcType="VARCHAR" property="img" />
        <result column="profession_name" jdbcType="VARCHAR" property="professionName" />
        <result column="profession_introduction" jdbcType="VARCHAR" property="professionIntroduction" />
        <result column="threshold" jdbcType="INTEGER" property="threshold" />
        <result column="complexity" jdbcType="INTEGER" property="complexity" />
        <result column="growth_cycle" jdbcType="VARCHAR" property="growthCycle" />
        <result column="scarcity_level" jdbcType="VARCHAR" property="scarcityLevel" />
        <result column="salary" jdbcType="VARCHAR" property="salary" />
        <result column="hint" jdbcType="VARCHAR" property="hint" />
        <result column="create_at" jdbcType="BIGINT" property="createAt" />
        <result column="update_at" jdbcType="BIGINT" property="updateAt" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="learning" jdbcType="INTEGER" property="learning" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, img, profession_name, profession_introduction, threshold,
        complexity, growth_cycle, scarcity_level, salary, hint, create_at, update_at, create_by,learning
    </sql>

    <select id="getAll" resultMap="BaseResultMap">
        select * from job
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select
        <include refid="Base_Column_List" />
        from job
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from job
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.jnshu.pojo.Job" >
        insert into job (id, img, profession_name,
                         profession_introduction, profession_direction,
                         threshold, complexity, growth_cycle,
                         scarcity_level, salary, hint,
                         create_at, update_at, create_by
        )
        values (#{id,jdbcType=BIGINT}, #{img,jdbcType=VARCHAR}, #{professionName,jdbcType=VARCHAR},
                #{professionIntroduction,jdbcType=VARCHAR}, #{professionDirection,jdbcType=VARCHAR},
                #{threshold,jdbcType=INTEGER}, #{complexity,jdbcType=INTEGER}, #{growthCycle,jdbcType=VARCHAR},
                #{scarcityLevel,jdbcType=VARCHAR}, #{salary,jdbcType=VARCHAR}, #{hint,jdbcType=VARCHAR},
                #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}
               )
    </insert>
    <insert id="insertSelective" parameterType="com.jnshu.pojo.Job" >
        insert into job
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="img != null" >
                img,
            </if>
            <if test="professionName != null" >
                profession_name,
            </if>
            <if test="professionIntroduction != null" >
                profession_introduction,
            </if>
            <if test="professionDirection != null" >
                profession_direction,
            </if>
            <if test="threshold != null" >
                threshold,
            </if>
            <if test="complexity != null" >
                complexity,
            </if>
            <if test="growthCycle != null" >
                growth_cycle,
            </if>
            <if test="scarcityLevel != null" >
                scarcity_level,
            </if>
            <if test="salary != null" >
                salary,
            </if>
            <if test="hint != null" >
                hint,
            </if>
            <if test="createAt != null" >
                create_at,
            </if>
            <if test="updateAt != null" >
                update_at,
            </if>
            <if test="createBy != null" >
                create_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="img != null" >
                #{img,jdbcType=VARCHAR},
            </if>
            <if test="professionName != null" >
                #{professionName,jdbcType=VARCHAR},
            </if>
            <if test="professionIntroduction != null" >
                #{professionIntroduction,jdbcType=VARCHAR},
            </if>
            <if test="professionDirection != null" >
                #{professionDirection,jdbcType=VARCHAR},
            </if>
            <if test="threshold != null" >
                #{threshold,jdbcType=INTEGER},
            </if>
            <if test="complexity != null" >
                #{complexity,jdbcType=INTEGER},
            </if>
            <if test="growthCycle != null" >
                #{growthCycle,jdbcType=VARCHAR},
            </if>
            <if test="scarcityLevel != null" >
                #{scarcityLevel,jdbcType=VARCHAR},
            </if>
            <if test="salary != null" >
                #{salary,jdbcType=VARCHAR},
            </if>
            <if test="hint != null" >
                #{hint,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null" >
                #{createAt,jdbcType=BIGINT},
            </if>
            <if test="updateAt != null" >
                #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="createBy != null" >
                #{createBy,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jnshu.pojo.Job" >
        update job
        <set >
            <if test="img != null" >
                img = #{img,jdbcType=VARCHAR},
            </if>
            <if test="professionName != null" >
                profession_name = #{professionName,jdbcType=VARCHAR},
            </if>
            <if test="professionIntroduction != null" >
                profession_introduction = #{professionIntroduction,jdbcType=VARCHAR},
            </if>
            <if test="professionDirection != null" >
                profession_direction = #{professionDirection,jdbcType=VARCHAR},
            </if>
            <if test="threshold != null" >
                threshold = #{threshold,jdbcType=INTEGER},
            </if>
            <if test="complexity != null" >
                complexity = #{complexity,jdbcType=INTEGER},
            </if>
            <if test="growthCycle != null" >
                growth_cycle = #{growthCycle,jdbcType=VARCHAR},
            </if>
            <if test="scarcityLevel != null" >
                scarcity_level = #{scarcityLevel,jdbcType=VARCHAR},
            </if>
            <if test="salary != null" >
                salary = #{salary,jdbcType=VARCHAR},
            </if>
            <if test="hint != null" >
                hint = #{hint,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null" >
                create_at = #{createAt,jdbcType=BIGINT},
            </if>
            <if test="updateAt != null" >
                update_at = #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="createBy != null" >
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jnshu.pojo.Job" >
        update job
        set img = #{img,jdbcType=VARCHAR},
            profession_name = #{professionName,jdbcType=VARCHAR},
            profession_introduction = #{professionIntroduction,jdbcType=VARCHAR},
            profession_direction = #{professionDirection,jdbcType=VARCHAR},
            threshold = #{threshold,jdbcType=INTEGER},
            complexity = #{complexity,jdbcType=INTEGER},
            growth_cycle = #{growthCycle,jdbcType=VARCHAR},
            scarcity_level = #{scarcityLevel,jdbcType=VARCHAR},
            salary = #{salary,jdbcType=VARCHAR},
            hint = #{hint,jdbcType=VARCHAR},
            create_at = #{createAt,jdbcType=BIGINT},
            update_at = #{updateAt,jdbcType=BIGINT},
            create_by = #{createBy,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>