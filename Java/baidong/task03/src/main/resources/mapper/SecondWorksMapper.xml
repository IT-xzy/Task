<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jnshu.mapper.SecondWorksMapper">
  <resultMap id="BaseResultMap" type="jnshu.model.SecondWorks">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="second_name" jdbcType="VARCHAR" property="secondName" />
    <result column="status" jdbcType="BIGINT" property="status" />
    <result column="belong_first" jdbcType="BIGINT" property="belongFirst" />
    <result column="create_at" jdbcType="BIGINT" property="createAt" />
    <result column="update_at" jdbcType="BIGINT" property="updateAt" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, second_name, status, belong_first, create_at, update_at, create_by, update_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from second_works
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from second_works
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="jnshu.model.SecondWorks">
    insert into second_works (id, second_name, status, 
      belong_first, create_at, update_at, 
      create_by, update_by)
    values (#{id,jdbcType=BIGINT}, #{secondName,jdbcType=VARCHAR}, #{status,jdbcType=BIGINT}, 
      #{belongFirst,jdbcType=BIGINT}, #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="jnshu.model.SecondWorks">
    insert into second_works
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="secondName != null">
        second_name,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="belongFirst != null">
        belong_first,
      </if>
      <if test="createAt != null">
        create_at,
      </if>
      <if test="updateAt != null">
        update_at,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="secondName != null">
        #{secondName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIGINT},
      </if>
      <if test="belongFirst != null">
        #{belongFirst,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="jnshu.model.SecondWorks">
    update second_works
    <set>
      <if test="secondName != null">
        second_name = #{secondName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIGINT},
      </if>
      <if test="belongFirst != null">
        belong_first = #{belongFirst,jdbcType=BIGINT},
      </if>
      <if test="createAt != null">
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null">
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="jnshu.model.SecondWorks">
    update second_works
    set second_name = #{secondName,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIGINT},
      belong_first = #{belongFirst,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
      <select id="selectByDynamicCondition" resultMap="BaseResultMap" parameterType="jnshu.model.SecondWorks">
        select * from second_works
        <where>
            <if test="secondName!=null">
                and second_name like concat('%','${secondName}','%' )
            </if>
            <if test="status!=null">
                and status =#{status}
            </if>
        </where>
    </select>
</mapper>