<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jnshu.mapper.BannerMapper">
    <resultMap id="BaseResultMap" type="jnshu.model.Banner">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="picture_url" jdbcType="VARCHAR" property="pictureUrl"/>
        <result column="status" jdbcType="BIGINT" property="status"/>
        <result column="create_at" jdbcType="BIGINT" property="createAt"/>
        <result column="update_at" jdbcType="BIGINT" property="updateAt"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="update_by" jdbcType="BIGINT" property="updateBy"/>

        <association property="user" javaType="jnshu.model.User">
            <id column="id" jdbcType="BIGINT" property="id"/>
            <result column="name" jdbcType="VARCHAR" property="name"/>
        </association>
    </resultMap>


    <sql id="Base_Column_List">
    id, picture_url, status, create_at, update_at, create_by, update_by
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from banner
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from banner
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="jnshu.model.Banner">
    insert into banner (id, picture_url, status,
      create_at, update_at, create_by,
      update_by)
    values (#{id,jdbcType=BIGINT}, #{pictureUrl,jdbcType=VARCHAR}, #{status,jdbcType=BIGINT},
      #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT},
      #{updateBy,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="jnshu.model.Banner">
        insert into banner
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="pictureUrl != null">
                picture_url,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="pictureUrl != null">
                #{pictureUrl,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=BIGINT},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="jnshu.model.Banner">
        update banner
        <set>
            <if test="pictureUrl != null">
                picture_url = #{pictureUrl,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=BIGINT},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="jnshu.model.Banner">
    update banner
    set picture_url = #{pictureUrl,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <!--    进行模糊查询-->
    <!-- 将JAVA实体类中的属性和表中的字段进行对应
     column:数据库中的列
     property:对应的实体类中的属性
    -->

    <!-- resultMap：resultMap的id ，bookName：resultMap的property，即实体类中的属性 -->

    <select id="selectByDynamicCondition" resultMap="BaseResultMap">
        SELECT banner.id, banner.picture_url,
        banner.status, banner.create_at,
        banner.update_at, banner.create_by,
        banner.update_by,
        user.name
        FROM
        banner
        INNER JOIN user ON banner.create_by = user.id
        <where>
            <if test="status!=null">
                and banner.status=#{status}
            </if>
            <if test="name !=null">
                and user.name like CONCAT('%','${name}','%' )
            </if>
        </where>

    </select>
</mapper>