<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jnshu.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="jnshu.model.Role">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="role" jdbcType="VARCHAR" property="role"/>
        <result column="permission" jdbcType="BIGINT" property="permission"/>
        <result column="create_at" jdbcType="BIGINT" property="createAt"/>
        <result column="update_at" jdbcType="BIGINT" property="updateAt"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="update_by" jdbcType="BIGINT" property="updateBy"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, role, permission, create_at, update_at, create_by, update_by
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="jnshu.model.Role">
    insert into role (id, role, permission, 
      create_at, update_at, create_by, 
      update_by)
    values (#{id,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, #{permission,jdbcType=BIGINT}, 
      #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="jnshu.model.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="role != null">
                role,
            </if>
            <if test="permission != null">
                permission,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="role != null">
                #{role,jdbcType=VARCHAR},
            </if>
            <if test="permission != null">
                #{permission,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=BIGINT},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="jnshu.model.Role">
        update role
        <set>
            <if test="role != null">
                role = #{role,jdbcType=VARCHAR},
            </if>
            <if test="permission != null">
                permission = #{permission,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=BIGINT},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="jnshu.model.Role">
    update role
    set role = #{role,jdbcType=VARCHAR},
      permission = #{permission,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectByDynamicCondition" resultMap="BaseResultMap" parameterType="string">
        select * from role
        <where>
            <if test="role!=null">
                and role like concat('%','${role}','%' )
            </if>
        </where>
    </select>
</mapper>